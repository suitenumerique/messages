#
# st-messages-mta-out package
#
[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "st-messages-mta-out"
version = "0.0.1"
authors = [{ "name" = "ANCT", "email" = "suiteterritoriale@anct.gouv.fr" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
    "Framework :: Django :: 5",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
description = "A stateless outgoing MTA."
keywords = ["Python", "MTA", "SMTP"]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "pytest==8.4.0",
    "fastapi==0.115.12",
    "uvicorn==0.34.3",
    "requests==2.32.4",
    "PyJWT==2.10.1",
    "aiosmtpd==1.4.6"  # For testing SMTP server
]

[project.urls]
"Bug Tracker" = "https://github.com/suitenumerique/st-messages/issues/new"
"Changelog" = "https://github.com/suitenumerique/st-messages/blob/main/CHANGELOG.md"
"Homepage" = "https://github.com/suitenumerique/st-messages"
"Repository" = "https://github.com/suitenumerique/st-messages"

[project.optional-dependencies]
dev = [
    "ruff==0.11.13",
    "pylint==3.3.7",
    "types-requests==2.32.4.20250611",
]

[tool.setuptools]
packages = { find = { where = ["."], exclude = ["tests"] } }
zip-safe = true

[tool.distutils.bdist_wheel]
universal = true

[tool.ruff]
exclude = [
    ".git",
    ".venv",
    "build",
    "venv",
    "__pycache__",
    "*/migrations/*",
]
line-length = 99


[tool.ruff.lint]
ignore = ["DJ001", "PLR2004"]
select = [
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
    "C4", # flake8-comprehensions
    "DJ", # flake8-django
    "I", # isort
    "PLC", # pylint-convention
    "PLE", # pylint-error
    "PLR", # pylint-refactoring
    "PLW", # pylint-warning
    "RUF100", # Ruff unused-noqa
    "RUF200", # Ruff check pyproject.toml
    "S", # flake8-bandit
    "SLF", # flake8-self
    "T20", # flake8-print
    "F"  # pyflakes
]

[tool.ruff.lint.isort]
section-order = ["future","standard-library","django","third-party","mta-out","first-party","local-folder"]
sections = { django=["django"] }
extra-standard-library = ["tomllib"]

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["S", "SLF"]

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--cov-report",
    "term-missing",
    # Allow test files to have the same name in different directories.
    "--import-mode=importlib",
]
python_files = [
    "test_*.py",
    "tests.py",
] 