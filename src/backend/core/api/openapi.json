{
    "openapi": "3.0.3",
    "info": {
        "title": "messages API",
        "version": "1.0.0 (v1.0)",
        "description": "This is the messages API schema."
    },
    "paths": {
        "/api/v1.0/blob/{id}/download/": {
            "get": {
                "operationId": "blob_download_retrieve",
                "description": "Download binary data for the specified blob ID.\n\nThis endpoint returns the raw binary content of a blob. Access is controlled\nby checking if the user has access to any mailbox that owns this blob.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blob"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/blob/upload/{mailbox_id}/": {
            "post": {
                "operationId": "blob_upload_create",
                "description": "Upload binary data and create a Blob record.\n\nThis endpoint accepts multipart/form-data containing a file and returns a\nblob ID and other metadata. The blob is associated with the specified mailbox.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "mailbox_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blob"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/config/": {
            "get": {
                "operationId": "config_retrieve",
                "description": "GET /api/v1.0/config/\n    Return a dictionary of public settings.",
                "tags": [
                    "config"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/draft/": {
            "post": {
                "operationId": "draft_create",
                "description": "\n    Create or update a draft message.\n    \n    This endpoint allows you to:\n    - Create a new draft message in a new thread\n    - Create a draft reply to an existing message in an existing thread\n    - Update an existing draft message\n    \n    For creating a new draft:\n    - Do not include messageId\n    - Include parentId if replying to an existing message\n    \n    For updating an existing draft:\n    - Include messageId of the draft to update\n    - Only the fields that are provided will be updated\n    \n    At least one of draftBody must be provided.\n    \n    To add attachments, upload them first using the /api/v1.0/blob/upload/{mailbox_id}/ endpoint\n    and include the returned blobIds in the attachmentIds field.\n    ",
                "tags": [
                    "messages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftMessageRequestRequest"
                            },
                            "examples": {
                                "NewDraftMessage": {
                                    "value": {
                                        "subject": "Hello",
                                        "draftBody": "{\"arbitrary\": \"json content\"}",
                                        "to": [
                                            "recipient@example.com"
                                        ],
                                        "cc": [
                                            "cc@example.com"
                                        ],
                                        "bcc": [
                                            "bcc@example.com"
                                        ]
                                    },
                                    "summary": "New Draft Message"
                                },
                                "DraftReply": {
                                    "value": {
                                        "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                        "subject": "Re: Hello",
                                        "draftBody": "{\"arbitrary\": \"json content\"}",
                                        "to": [
                                            "recipient@example.com"
                                        ]
                                    },
                                    "summary": "Draft Reply"
                                },
                                "UpdateDraftWithAttachments": {
                                    "value": {
                                        "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                        "subject": "Updated subject",
                                        "draftBody": "{\"arbitrary\": \"new json content\"}",
                                        "to": [
                                            "new-recipient@example.com"
                                        ],
                                        "attachments": [
                                            {
                                                "partId": "att-1",
                                                "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                "name": "document.pdf"
                                            }
                                        ]
                                    },
                                    "summary": "Update Draft with Attachments"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftMessageRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                },
                                "examples": {
                                    "NewDraftMessage": {
                                        "value": {
                                            "subject": "Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ],
                                            "cc": [
                                                "cc@example.com"
                                            ],
                                            "bcc": [
                                                "bcc@example.com"
                                            ]
                                        },
                                        "summary": "New Draft Message"
                                    },
                                    "DraftReply": {
                                        "value": {
                                            "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Re: Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ]
                                        },
                                        "summary": "Draft Reply"
                                    },
                                    "UpdateDraftWithAttachments": {
                                        "value": {
                                            "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Updated subject",
                                            "draftBody": "{\"arbitrary\": \"new json content\"}",
                                            "to": [
                                                "new-recipient@example.com"
                                            ],
                                            "attachments": [
                                                {
                                                    "partId": "att-1",
                                                    "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                    "name": "document.pdf"
                                                }
                                            ]
                                        },
                                        "summary": "Update Draft with Attachments"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                },
                                "examples": {
                                    "NewDraftMessage": {
                                        "value": {
                                            "subject": "Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ],
                                            "cc": [
                                                "cc@example.com"
                                            ],
                                            "bcc": [
                                                "bcc@example.com"
                                            ]
                                        },
                                        "summary": "New Draft Message"
                                    },
                                    "DraftReply": {
                                        "value": {
                                            "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Re: Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ]
                                        },
                                        "summary": "Draft Reply"
                                    },
                                    "UpdateDraftWithAttachments": {
                                        "value": {
                                            "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Updated subject",
                                            "draftBody": "{\"arbitrary\": \"new json content\"}",
                                            "to": [
                                                "new-recipient@example.com"
                                            ],
                                            "attachments": [
                                                {
                                                    "partId": "att-1",
                                                    "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                    "name": "document.pdf"
                                                }
                                            ]
                                        },
                                        "summary": "Update Draft with Attachments"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "draft_update",
                "description": "\n    Create or update a draft message.\n    \n    This endpoint allows you to:\n    - Create a new draft message in a new thread\n    - Create a draft reply to an existing message in an existing thread\n    - Update an existing draft message\n    \n    For creating a new draft:\n    - Do not include messageId\n    - Include parentId if replying to an existing message\n    \n    For updating an existing draft:\n    - Include messageId of the draft to update\n    - Only the fields that are provided will be updated\n    \n    At least one of draftBody must be provided.\n    \n    To add attachments, upload them first using the /api/v1.0/blob/upload/{mailbox_id}/ endpoint\n    and include the returned blobIds in the attachmentIds field.\n    ",
                "tags": [
                    "messages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftMessageRequestRequest"
                            },
                            "examples": {
                                "NewDraftMessage": {
                                    "value": {
                                        "subject": "Hello",
                                        "draftBody": "{\"arbitrary\": \"json content\"}",
                                        "to": [
                                            "recipient@example.com"
                                        ],
                                        "cc": [
                                            "cc@example.com"
                                        ],
                                        "bcc": [
                                            "bcc@example.com"
                                        ]
                                    },
                                    "summary": "New Draft Message"
                                },
                                "DraftReply": {
                                    "value": {
                                        "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                        "subject": "Re: Hello",
                                        "draftBody": "{\"arbitrary\": \"json content\"}",
                                        "to": [
                                            "recipient@example.com"
                                        ]
                                    },
                                    "summary": "Draft Reply"
                                },
                                "UpdateDraftWithAttachments": {
                                    "value": {
                                        "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                        "subject": "Updated subject",
                                        "draftBody": "{\"arbitrary\": \"new json content\"}",
                                        "to": [
                                            "new-recipient@example.com"
                                        ],
                                        "attachments": [
                                            {
                                                "partId": "att-1",
                                                "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                "name": "document.pdf"
                                            }
                                        ]
                                    },
                                    "summary": "Update Draft with Attachments"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftMessageRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                },
                                "examples": {
                                    "NewDraftMessage": {
                                        "value": {
                                            "subject": "Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ],
                                            "cc": [
                                                "cc@example.com"
                                            ],
                                            "bcc": [
                                                "bcc@example.com"
                                            ]
                                        },
                                        "summary": "New Draft Message"
                                    },
                                    "DraftReply": {
                                        "value": {
                                            "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Re: Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ]
                                        },
                                        "summary": "Draft Reply"
                                    },
                                    "UpdateDraftWithAttachments": {
                                        "value": {
                                            "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Updated subject",
                                            "draftBody": "{\"arbitrary\": \"new json content\"}",
                                            "to": [
                                                "new-recipient@example.com"
                                            ],
                                            "attachments": [
                                                {
                                                    "partId": "att-1",
                                                    "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                    "name": "document.pdf"
                                                }
                                            ]
                                        },
                                        "summary": "Update Draft with Attachments"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                },
                                "examples": {
                                    "NewDraftMessage": {
                                        "value": {
                                            "subject": "Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ],
                                            "cc": [
                                                "cc@example.com"
                                            ],
                                            "bcc": [
                                                "bcc@example.com"
                                            ]
                                        },
                                        "summary": "New Draft Message"
                                    },
                                    "DraftReply": {
                                        "value": {
                                            "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Re: Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ]
                                        },
                                        "summary": "Draft Reply"
                                    },
                                    "UpdateDraftWithAttachments": {
                                        "value": {
                                            "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Updated subject",
                                            "draftBody": "{\"arbitrary\": \"new json content\"}",
                                            "to": [
                                                "new-recipient@example.com"
                                            ],
                                            "attachments": [
                                                {
                                                    "partId": "att-1",
                                                    "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                    "name": "document.pdf"
                                                }
                                            ]
                                        },
                                        "summary": "Update Draft with Attachments"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/draft/{message_id}/": {
            "post": {
                "operationId": "draft_create_2",
                "description": "\n    Create or update a draft message.\n    \n    This endpoint allows you to:\n    - Create a new draft message in a new thread\n    - Create a draft reply to an existing message in an existing thread\n    - Update an existing draft message\n    \n    For creating a new draft:\n    - Do not include messageId\n    - Include parentId if replying to an existing message\n    \n    For updating an existing draft:\n    - Include messageId of the draft to update\n    - Only the fields that are provided will be updated\n    \n    At least one of draftBody must be provided.\n    \n    To add attachments, upload them first using the /api/v1.0/blob/upload/{mailbox_id}/ endpoint\n    and include the returned blobIds in the attachmentIds field.\n    ",
                "parameters": [
                    {
                        "in": "path",
                        "name": "message_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "messages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftMessageRequestRequest"
                            },
                            "examples": {
                                "NewDraftMessage": {
                                    "value": {
                                        "subject": "Hello",
                                        "draftBody": "{\"arbitrary\": \"json content\"}",
                                        "to": [
                                            "recipient@example.com"
                                        ],
                                        "cc": [
                                            "cc@example.com"
                                        ],
                                        "bcc": [
                                            "bcc@example.com"
                                        ]
                                    },
                                    "summary": "New Draft Message"
                                },
                                "DraftReply": {
                                    "value": {
                                        "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                        "subject": "Re: Hello",
                                        "draftBody": "{\"arbitrary\": \"json content\"}",
                                        "to": [
                                            "recipient@example.com"
                                        ]
                                    },
                                    "summary": "Draft Reply"
                                },
                                "UpdateDraftWithAttachments": {
                                    "value": {
                                        "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                        "subject": "Updated subject",
                                        "draftBody": "{\"arbitrary\": \"new json content\"}",
                                        "to": [
                                            "new-recipient@example.com"
                                        ],
                                        "attachments": [
                                            {
                                                "partId": "att-1",
                                                "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                "name": "document.pdf"
                                            }
                                        ]
                                    },
                                    "summary": "Update Draft with Attachments"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftMessageRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                },
                                "examples": {
                                    "NewDraftMessage": {
                                        "value": {
                                            "subject": "Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ],
                                            "cc": [
                                                "cc@example.com"
                                            ],
                                            "bcc": [
                                                "bcc@example.com"
                                            ]
                                        },
                                        "summary": "New Draft Message"
                                    },
                                    "DraftReply": {
                                        "value": {
                                            "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Re: Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ]
                                        },
                                        "summary": "Draft Reply"
                                    },
                                    "UpdateDraftWithAttachments": {
                                        "value": {
                                            "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Updated subject",
                                            "draftBody": "{\"arbitrary\": \"new json content\"}",
                                            "to": [
                                                "new-recipient@example.com"
                                            ],
                                            "attachments": [
                                                {
                                                    "partId": "att-1",
                                                    "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                    "name": "document.pdf"
                                                }
                                            ]
                                        },
                                        "summary": "Update Draft with Attachments"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                },
                                "examples": {
                                    "NewDraftMessage": {
                                        "value": {
                                            "subject": "Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ],
                                            "cc": [
                                                "cc@example.com"
                                            ],
                                            "bcc": [
                                                "bcc@example.com"
                                            ]
                                        },
                                        "summary": "New Draft Message"
                                    },
                                    "DraftReply": {
                                        "value": {
                                            "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Re: Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ]
                                        },
                                        "summary": "Draft Reply"
                                    },
                                    "UpdateDraftWithAttachments": {
                                        "value": {
                                            "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Updated subject",
                                            "draftBody": "{\"arbitrary\": \"new json content\"}",
                                            "to": [
                                                "new-recipient@example.com"
                                            ],
                                            "attachments": [
                                                {
                                                    "partId": "att-1",
                                                    "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                    "name": "document.pdf"
                                                }
                                            ]
                                        },
                                        "summary": "Update Draft with Attachments"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "draft_update_2",
                "description": "\n    Create or update a draft message.\n    \n    This endpoint allows you to:\n    - Create a new draft message in a new thread\n    - Create a draft reply to an existing message in an existing thread\n    - Update an existing draft message\n    \n    For creating a new draft:\n    - Do not include messageId\n    - Include parentId if replying to an existing message\n    \n    For updating an existing draft:\n    - Include messageId of the draft to update\n    - Only the fields that are provided will be updated\n    \n    At least one of draftBody must be provided.\n    \n    To add attachments, upload them first using the /api/v1.0/blob/upload/{mailbox_id}/ endpoint\n    and include the returned blobIds in the attachmentIds field.\n    ",
                "parameters": [
                    {
                        "in": "path",
                        "name": "message_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "messages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftMessageRequestRequest"
                            },
                            "examples": {
                                "NewDraftMessage": {
                                    "value": {
                                        "subject": "Hello",
                                        "draftBody": "{\"arbitrary\": \"json content\"}",
                                        "to": [
                                            "recipient@example.com"
                                        ],
                                        "cc": [
                                            "cc@example.com"
                                        ],
                                        "bcc": [
                                            "bcc@example.com"
                                        ]
                                    },
                                    "summary": "New Draft Message"
                                },
                                "DraftReply": {
                                    "value": {
                                        "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                        "subject": "Re: Hello",
                                        "draftBody": "{\"arbitrary\": \"json content\"}",
                                        "to": [
                                            "recipient@example.com"
                                        ]
                                    },
                                    "summary": "Draft Reply"
                                },
                                "UpdateDraftWithAttachments": {
                                    "value": {
                                        "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                        "subject": "Updated subject",
                                        "draftBody": "{\"arbitrary\": \"new json content\"}",
                                        "to": [
                                            "new-recipient@example.com"
                                        ],
                                        "attachments": [
                                            {
                                                "partId": "att-1",
                                                "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                "name": "document.pdf"
                                            }
                                        ]
                                    },
                                    "summary": "Update Draft with Attachments"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftMessageRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                },
                                "examples": {
                                    "NewDraftMessage": {
                                        "value": {
                                            "subject": "Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ],
                                            "cc": [
                                                "cc@example.com"
                                            ],
                                            "bcc": [
                                                "bcc@example.com"
                                            ]
                                        },
                                        "summary": "New Draft Message"
                                    },
                                    "DraftReply": {
                                        "value": {
                                            "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Re: Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ]
                                        },
                                        "summary": "Draft Reply"
                                    },
                                    "UpdateDraftWithAttachments": {
                                        "value": {
                                            "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Updated subject",
                                            "draftBody": "{\"arbitrary\": \"new json content\"}",
                                            "to": [
                                                "new-recipient@example.com"
                                            ],
                                            "attachments": [
                                                {
                                                    "partId": "att-1",
                                                    "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                    "name": "document.pdf"
                                                }
                                            ]
                                        },
                                        "summary": "Update Draft with Attachments"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                },
                                "examples": {
                                    "NewDraftMessage": {
                                        "value": {
                                            "subject": "Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ],
                                            "cc": [
                                                "cc@example.com"
                                            ],
                                            "bcc": [
                                                "bcc@example.com"
                                            ]
                                        },
                                        "summary": "New Draft Message"
                                    },
                                    "DraftReply": {
                                        "value": {
                                            "parentId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Re: Hello",
                                            "draftBody": "{\"arbitrary\": \"json content\"}",
                                            "to": [
                                                "recipient@example.com"
                                            ]
                                        },
                                        "summary": "Draft Reply"
                                    },
                                    "UpdateDraftWithAttachments": {
                                        "value": {
                                            "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                            "subject": "Updated subject",
                                            "draftBody": "{\"arbitrary\": \"new json content\"}",
                                            "to": [
                                                "new-recipient@example.com"
                                            ],
                                            "attachments": [
                                                {
                                                    "partId": "att-1",
                                                    "blobId": "123e4567-e89b-12d3-a456-426614174001",
                                                    "name": "document.pdf"
                                                }
                                            ]
                                        },
                                        "summary": "Update Draft with Attachments"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/flag/": {
            "post": {
                "operationId": "flag_create",
                "description": "Change a specific flag (unread, starred, trashed) for multiple messages or all messages within multiple threads. Uses request body.",
                "tags": [
                    "flags"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeFlagRequestRequest"
                            },
                            "examples": {
                                "MarkMessagesAsRead": {
                                    "value": {
                                        "flag": "unread",
                                        "value": false,
                                        "message_ids": [
                                            "123e4567-e89b-12d3-a456-426614174001",
                                            "123e4567-e89b-12d3-a456-426614174002"
                                        ]
                                    },
                                    "summary": "Mark messages as read"
                                },
                                "TrashThreads": {
                                    "value": {
                                        "flag": "trashed",
                                        "value": true,
                                        "thread_ids": [
                                            "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                                            "b2c3d4e5-f6a7-8901-2345-67890abcdef0"
                                        ]
                                    },
                                    "summary": "Trash threads"
                                },
                                "StarMessagesAndThreads": {
                                    "value": {
                                        "flag": "starred",
                                        "value": true,
                                        "message_ids": [
                                            "123e4567-e89b-12d3-a456-426614174005"
                                        ],
                                        "thread_ids": [
                                            "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                                        ]
                                    },
                                    "summary": "Star messages and threads"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeFlagRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                },
                                "examples": {
                                    "MarkMessagesAsRead": {
                                        "value": {
                                            "flag": "unread",
                                            "value": false,
                                            "message_ids": [
                                                "123e4567-e89b-12d3-a456-426614174001",
                                                "123e4567-e89b-12d3-a456-426614174002"
                                            ]
                                        },
                                        "summary": "Mark messages as read"
                                    },
                                    "TrashThreads": {
                                        "value": {
                                            "flag": "trashed",
                                            "value": true,
                                            "thread_ids": [
                                                "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                                                "b2c3d4e5-f6a7-8901-2345-67890abcdef0"
                                            ]
                                        },
                                        "summary": "Trash threads"
                                    },
                                    "StarMessagesAndThreads": {
                                        "value": {
                                            "flag": "starred",
                                            "value": true,
                                            "message_ids": [
                                                "123e4567-e89b-12d3-a456-426614174005"
                                            ],
                                            "thread_ids": [
                                                "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                                            ]
                                        },
                                        "summary": "Star messages and threads"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/mailboxes/": {
            "get": {
                "operationId": "mailboxes_list",
                "description": "ViewSet for Mailbox model.",
                "tags": [
                    "mailboxes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mailbox"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/messages/": {
            "get": {
                "operationId": "messages_list",
                "description": "ViewSet for Message model.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "messages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMessageList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/messages/{id}/": {
            "get": {
                "operationId": "messages_retrieve",
                "description": "ViewSet for Message model.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "messages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "messages_destroy",
                "description": "Delete a message. Object permission checked by IsAllowedToAccess.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "messages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/mta/check-recipients/": {
            "post": {
                "operationId": "mta_check_recipients_create",
                "description": "Check if recipient email addresses exist for the MTA.",
                "tags": [
                    "mta"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/mta/inbound-email/": {
            "post": {
                "operationId": "mta_inbound_email_create",
                "description": "Handle incoming raw email (message/rfc822) from MTA.",
                "tags": [
                    "mta"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/send/": {
            "post": {
                "operationId": "send_create",
                "description": "\n    Send a previously created draft message.\n\n    This endpoint finalizes and sends a message previously saved as a draft.\n    The message content (subject, body, recipients) should be set when creating/updating the draft.\n    Returns a task ID that can be used to track the sending status.\n    ",
                "tags": [
                    "messages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendMessageRequestRequest"
                            },
                            "examples": {
                                "SendDraft": {
                                    "value": {
                                        "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                        "senderId": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                                        "textBody": "Hello, world!",
                                        "htmlBody": "<p>Hello, world!</p>"
                                    },
                                    "summary": "Send Draft"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SendMessageRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendMessageResponse"
                                },
                                "examples": {
                                    "SendDraft": {
                                        "value": {
                                            "messageId": "123e4567-e89b-12d3-a456-426614174000",
                                            "senderId": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                                            "textBody": "Hello, world!",
                                            "htmlBody": "<p>Hello, world!</p>"
                                        },
                                        "summary": "Send Draft"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/tasks/{task_id}/": {
            "get": {
                "operationId": "tasks_retrieve",
                "description": "\n    Get the status of an async task.\n\n    This endpoint returns the current status of a task identified by its ID.\n    ",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "tasks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskStatusResponse"
                                },
                                "examples": {
                                    "TaskStatus": {
                                        "value": {
                                            "status": "SUCCESS",
                                            "result": {
                                                "success": true
                                            },
                                            "error": null
                                        },
                                        "summary": "Task Status"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/threads/": {
            "get": {
                "operationId": "threads_list",
                "description": "List threads with optional search functionality.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_draft",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter threads with draft messages (1=true, 0=false)."
                    },
                    {
                        "in": "query",
                        "name": "has_sender",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter threads with messages sent by the user (1=true, 0=false)."
                    },
                    {
                        "in": "query",
                        "name": "has_starred",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter threads with starred messages (1=true, 0=false)."
                    },
                    {
                        "in": "query",
                        "name": "has_trashed",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter threads that are trashed (1=true, 0=false)."
                    },
                    {
                        "in": "query",
                        "name": "has_unread",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter threads with unread messages (1=true, 0=false)."
                    },
                    {
                        "in": "query",
                        "name": "mailbox_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter threads by mailbox ID."
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search threads by content (subject, sender, recipients, message body)."
                    }
                ],
                "tags": [
                    "threads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedThreadList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/threads/{id}/": {
            "delete": {
                "operationId": "threads_destroy",
                "description": "ViewSet for Thread model.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "threads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/threads/stats/": {
            "get": {
                "operationId": "threads_stats_retrieve",
                "description": "Get aggregated statistics for threads based on filters.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_draft",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter threads with draft messages (1=true, 0=false)."
                    },
                    {
                        "in": "query",
                        "name": "has_sender",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter threads with messages sent by the user (1=true, 0=false)."
                    },
                    {
                        "in": "query",
                        "name": "has_starred",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter threads with starred messages (1=true, 0=false)."
                    },
                    {
                        "in": "query",
                        "name": "has_trashed",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter threads that are trashed (1=true, 0=false)."
                    },
                    {
                        "in": "query",
                        "name": "has_unread",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter threads with unread messages (1=true, 0=false)."
                    },
                    {
                        "in": "query",
                        "name": "mailbox_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter threads by mailbox ID."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search threads by content (subject, sender, recipients, message body)."
                    },
                    {
                        "in": "query",
                        "name": "stats_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "messages",
                                "sender",
                                "starred",
                                "trashed",
                                "unread"
                            ]
                        },
                        "description": "Comma-separated list of fields to aggregate. Allowed values: unread, trashed, draft, starred, sender, messages",
                        "required": true,
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "threads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "unread": {
                                            "type": "integer"
                                        },
                                        "trashed": {
                                            "type": "integer"
                                        },
                                        "draft": {
                                            "type": "integer"
                                        },
                                        "starred": {
                                            "type": "integer"
                                        },
                                        "sender": {
                                            "type": "integer"
                                        },
                                        "messages": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A dictionary containing the aggregated counts. Keys correspond to the fields requested via the `stats_fields` query parameter. All possible keys (derived from THREAD_STATS_FIELDS_MAP) are defined in the schema, each mapping to an integer count. Keys not requested will not be present in the response."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returned if `stats_fields` parameter is missing or contains invalid fields. Allowed fields: unread, trashed, draft, starred, sender, messages"
                    }
                }
            }
        },
        "/api/v1.0/users/me/": {
            "get": {
                "operationId": "users_me_retrieve",
                "description": "Return information on currently logged user",
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Attachment": {
                "type": "object",
                "description": "Serialize attachments.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "blobId": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "title": "File name",
                        "description": "Original filename of the attachment"
                    },
                    "size": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Created on",
                        "description": "date and time at which a record was created"
                    }
                },
                "required": [
                    "blobId",
                    "created_at",
                    "id",
                    "name",
                    "sha256",
                    "size",
                    "type"
                ]
            },
            "ChangeFlagRequestRequest": {
                "type": "object",
                "properties": {
                    "flag": {
                        "$ref": "#/components/schemas/FlagEnum"
                    },
                    "value": {
                        "type": "boolean"
                    },
                    "message_ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "List of message UUIDs to apply the flag change to."
                    },
                    "thread_ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "List of thread UUIDs where all messages should have the flag change applied."
                    }
                },
                "required": [
                    "flag",
                    "value"
                ]
            },
            "Contact": {
                "type": "object",
                "description": "Serialize contacts.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    }
                },
                "required": [
                    "email",
                    "id"
                ]
            },
            "DraftMessageRequestRequest": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "Message ID if updating an existing draft"
                    },
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "Message ID if replying to an existing message"
                    },
                    "senderId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Mailbox ID to use as sender"
                    },
                    "subject": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Subject of the message"
                    },
                    "draftBody": {
                        "type": "string",
                        "description": "Content of the draft message as arbitrary text (usually JSON)"
                    },
                    "to": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "email",
                            "minLength": 1
                        },
                        "description": "List of recipient email addresses"
                    },
                    "cc": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "email",
                            "minLength": 1
                        },
                        "description": "List of CC recipient email addresses"
                    },
                    "bcc": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "email",
                            "minLength": 1
                        },
                        "description": "List of BCC recipient email addresses"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {}
                        },
                        "description": "List of attachment objects with blobId, partId, and name"
                    }
                },
                "required": [
                    "senderId",
                    "subject"
                ]
            },
            "FlagEnum": {
                "enum": [
                    "unread",
                    "starred",
                    "trashed"
                ],
                "type": "string",
                "description": "* `unread` - unread\n* `starred` - starred\n* `trashed` - trashed"
            },
            "Mailbox": {
                "type": "object",
                "description": "Serialize mailboxes.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "email": {
                        "type": "string",
                        "readOnly": true
                    },
                    "role": {
                        "type": "string",
                        "readOnly": true
                    },
                    "count_unread_messages": {
                        "type": "string",
                        "readOnly": true
                    },
                    "count_messages": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "count_messages",
                    "count_unread_messages",
                    "email",
                    "id",
                    "role"
                ]
            },
            "Message": {
                "type": "object",
                "description": "Serialize messages, getting parsed details from the Message model.\nAligns field names with JMAP where appropriate (textBody, htmlBody, to, cc, bcc).",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "parent_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "nullable": true
                    },
                    "thread_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "nullable": true
                    },
                    "subject": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Created on",
                        "description": "date and time at which a record was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Updated on",
                        "description": "date and time at which a record was last updated"
                    },
                    "htmlBody": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {}
                        },
                        "readOnly": true
                    },
                    "textBody": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {}
                        },
                        "readOnly": true
                    },
                    "draftBody": {
                        "type": "string",
                        "readOnly": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "readOnly": true
                    },
                    "sender": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Contact"
                            }
                        ],
                        "readOnly": true
                    },
                    "to": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        },
                        "readOnly": true
                    },
                    "cc": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        },
                        "readOnly": true
                    },
                    "bcc": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        },
                        "readOnly": true
                    },
                    "read_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "sent_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "is_sender": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_draft": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_unread": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_starred": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_trashed": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "attachments",
                    "bcc",
                    "cc",
                    "created_at",
                    "draftBody",
                    "htmlBody",
                    "id",
                    "is_draft",
                    "is_sender",
                    "is_starred",
                    "is_trashed",
                    "is_unread",
                    "parent_id",
                    "read_at",
                    "sender",
                    "sent_at",
                    "subject",
                    "textBody",
                    "thread_id",
                    "to",
                    "updated_at"
                ]
            },
            "PaginatedMessageList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Message"
                        }
                    }
                }
            },
            "PaginatedThreadList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Thread"
                        }
                    }
                }
            },
            "SendMessageRequestRequest": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID of the draft message to send"
                    },
                    "senderId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Mailbox ID from which to send (must match draft)"
                    },
                    "textBody": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Text body of the message"
                    },
                    "htmlBody": {
                        "type": "string",
                        "minLength": 1,
                        "description": "HTML body of the message"
                    }
                },
                "required": [
                    "messageId",
                    "senderId"
                ]
            },
            "SendMessageResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task ID for tracking"
                    }
                },
                "required": [
                    "message",
                    "task_id"
                ]
            },
            "StatusEnum": {
                "enum": [
                    "STARTED",
                    "PENDING",
                    "RECEIVED",
                    "SUCCESS",
                    "REVOKED",
                    "FAILURE",
                    "RETRY"
                ],
                "type": "string",
                "description": "* `STARTED` - STARTED\n* `PENDING` - PENDING\n* `RECEIVED` - RECEIVED\n* `SUCCESS` - SUCCESS\n* `REVOKED` - REVOKED\n* `FAILURE` - FAILURE\n* `RETRY` - RETRY"
            },
            "TaskStatusResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "result": {
                        "nullable": true
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "error",
                    "result",
                    "status"
                ]
            },
            "Thread": {
                "type": "object",
                "description": "Serialize threads.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "subject": {
                        "type": "string",
                        "readOnly": true
                    },
                    "snippet": {
                        "type": "string",
                        "readOnly": true
                    },
                    "messages": {
                        "type": "string",
                        "readOnly": true
                    },
                    "count_unread": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "count_trashed": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "count_draft": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "count_starred": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "count_sender": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "count_messages": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "messaged_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "sender_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Updated on",
                        "description": "date and time at which a record was last updated"
                    },
                    "user_role": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "count_draft",
                    "count_messages",
                    "count_sender",
                    "count_starred",
                    "count_trashed",
                    "count_unread",
                    "id",
                    "messaged_at",
                    "messages",
                    "sender_names",
                    "snippet",
                    "subject",
                    "updated_at",
                    "user_role"
                ]
            },
            "User": {
                "type": "object",
                "description": "Serialize users.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Identity email address"
                    },
                    "full_name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "short_name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "email",
                    "full_name",
                    "id",
                    "short_name"
                ]
            }
        },
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    }
}